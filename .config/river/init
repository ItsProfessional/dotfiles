#!/bin/sh

mod=Super
term=$TERMINAL # set in .zshenv
editor=subl
fm=nemo
browser=firefox
browser_private="firefox --private-window"

# Terminal
riverctl map normal $mod Return spawn $term

# Close window
riverctl map normal $mod Q close

# Exit
riverctl map normal $mod+Shift E exit

# focus the next/previous view in the layout stack
riverctl map normal $mod J focus-view next
riverctl map normal $mod K focus-view previous

# swap the focused view with the next/previous
# view in the layout stack
riverctl map normal $mod+Shift J swap next
riverctl map normal $mod+Shift K swap previous

# the top of the layout stack
#riverctl map normal $mod Return zoom

# decrease/increase the main ratio of rivertile(1)
riverctl map normal $mod H send-layout-cmd rivertile "main-ratio -0.05"
riverctl map normal $mod L send-layout-cmd rivertile "main-ratio +0.05"

# increment/decrement the main count of rivertile(1)
riverctl map normal $mod+Shift H send-layout-cmd rivertile "main-count +1"
riverctl map normal $mod+Shift L send-layout-cmd rivertile "main-count -1"

# move views
riverctl map normal $mod+Alt H move left 100
riverctl map normal $mod+Alt J move down 100
riverctl map normal $mod+Alt K move up 100
riverctl map normal $mod+Alt L move right 100

# resize views
riverctl map normal $mod+Alt+Shift H resize horizontal -100
riverctl map normal $mod+Alt+Shift J resize vertical 100
riverctl map normal $mod+Alt+Shift K resize vertical -100
riverctl map normal $mod+Alt+Shift L resize horizontal 100

# move views
riverctl map-pointer normal $mod BTN_LEFT move-view

# resize views
riverctl map-pointer normal $mod BTN_RIGHT resize-view

# toggle float
riverctl map-pointer normal $mod BTN_MIDDLE toggle-float

for i in $(seq 1 9)
do
    tags=$((1 << ($i - 1)))

    # focus tag [0-8]
    riverctl map normal $mod $i set-focused-tags $tags

    # tag focused view with tag [0-8]
    riverctl map normal $mod+Shift $i set-view-tags $tags

    # toggle focus of tag [0-8]
    riverctl map normal $mod+Control $i toggle-focused-tags $tags

    # toggle tag [0-8] of focused view
    riverctl map normal $mod+Shift+Control $i toggle-view-tags $tags
done

# focus all tags
# tag focused view with all tags
all_tags=$(((1 << 32) - 1))
riverctl map normal $mod 0 set-focused-tags $all_tags
riverctl map normal $mod+Shift 0 set-view-tags $all_tags

# toggle float
riverctl map normal $mod S toggle-float

# toggle fullscreen
riverctl map normal $mod F toggle-fullscreen

# change layout orientation
riverctl map normal $mod Up    send-layout-cmd rivertile "main-location top"
riverctl map normal $mod Right send-layout-cmd rivertile "main-location right"
riverctl map normal $mod Down  send-layout-cmd rivertile "main-location bottom"
riverctl map normal $mod Left  send-layout-cmd rivertile "main-location left"

# Declare a passthrough mode. This mode has only a single mapping to return to
# normal mode. This makes it useful for testing a nested wayland compositor
riverctl declare-mode passthrough

# enter passthrough mode
riverctl map normal $mod F11 enter-mode passthrough

# normal mode
riverctl map passthrough $mod F11 enter-mode normal

# Various media key mapping examples for both normal and locked mode which do
# not have a modifier
for mode in normal locked
do
    # Eject the optical drive (well if you still have one that is)
    riverctl map $mode None XF86Eject spawn 'eject -T'

    # Control pulse audio volume with pamixer (https://github.com/cdemoulins/pamixer)
    riverctl map $mode None XF86AudioRaiseVolume  spawn 'pamixer -i 5'
    riverctl map $mode None XF86AudioLowerVolume  spawn 'pamixer -d 5'
    riverctl map $mode None XF86AudioMute         spawn 'pamixer --toggle-mute'

    # Control MPRIS aware media players with playerctl (https://github.com/altdesktop/playerctl)
    riverctl map $mode None XF86AudioMedia spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPlay  spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPrev  spawn 'playerctl previous'
    riverctl map $mode None XF86AudioNext  spawn 'playerctl next'

    # Control screen backlight brightness with brightnessctl (https://github.com/Hummer12007/brightnessctl)
    riverctl map $mode None XF86MonBrightnessUp   spawn 'brightnessctl set +5%'
    riverctl map $mode None XF86MonBrightnessDown spawn 'brightnessctl set 5%-'
done

# Set background and border color
riverctl background-color 0x002b36
riverctl border-color-focused 0x93a1a1
riverctl border-color-unfocused 0x586e75

# Set keyboard repeat rate
riverctl set-repeat 25 300

riverctl list-inputs | while read -r input; do
    case "$(echo "$input" | tr '[:upper:]' '[:lower:]')" in
        *touchpad*) 
            riverctl input "$input" pointer-accel 0.30
            riverctl input "$input" scroll-factor 0.1
            riverctl input "$input" click-method clickfinger
            riverctl input "$input" tap enabled
            riverctl input "$input" drag enabled
            riverctl input "$input" drag-lock disabled
            riverctl input "$input" natural-scroll enabled
            riverctl input "$input" disable-while-typing disabled
            riverctl input "$input" middle-emulation disabled
            riverctl input "$input" events disabled-on-external-mouse
            ;;
        pointer-*) 
            riverctl input "$input" accel-profile flat
            riverctl input "$input" pointer-accel 0.12
            ;;
    esac
done

# Make all views with an app-id that starts with "float" and title "foo" start floating.
riverctl rule-add -app-id 'float*' -title 'foo' float

# Make all views with app-id "bar" and any title use client-side decorations
riverctl rule-add -app-id "bar" csd

# Set the default layout generator to be rivertile and start it.
# River will send the process group of the init executable SIGTERM on exit.
riverctl default-layout rivertile
rivertile -view-padding 0 -outer-padding 0 &

