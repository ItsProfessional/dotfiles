# File options: $ swiftformat --options

# Comma-delimited list of ignored paths (supports glob syntax)
#--exclude               Pods

# Comma-delimited list of format rules to be disabled, or "all"
#--disable               elseOnSameLine,semicolons

# Comma-delimited list of rules to be enabled, or "all"
#--enable                all


# FORMAT OPTIONS

# Acronyms to auto-capitalize. Defaults to "ID,URL,UUID".
--acronyms              "ID,URL,UUID"

# Use allman indentation style: "true" or "false" (default)
--allman                false

# Color/image literal width. "actual-width" or "visual-width"
--assetliterals         actual-width

# List of functions with async @autoclosure arguments
#--asynccapturing        List of functions

# Declarations placed before first mark (e.g. typealias, struct)
#--beforemarks           Declarations placed before first mark

# Binary grouping, threshold (default: 4,8) or "none", "ignore"
--binarygrouping        4,8

# Template for category mark comments. Defaults to "MARK: %c"
#--categorymark          Template for category mark comments

# Minimum line count to organize class body. Defaults to 0
--classthreshold        0

# Closing paren position: "balanced" (default) or "same-line"
--closingparen          balanced

# Closure void returns: "remove" (default) or "preserve"
--closurevoid           remove

# Commas in collection literals: "always" (default) or "inline"
--commas                always

# Decimal grouping, threshold (default: 3,6) or "none", "ignore"
--decimalgrouping       3,6

# Placement of else/catch: "same-line" (default) or "next-line"
--elseposition          same-line

# Empty braces: "no-space" (default), "spaced" or "linebreak"
--emptybraces           no-space

# Change type to enum: "always" (default) or "structs-only"
--enumnamespaces        always

# Minimum line count to organize enum body. Defaults to 0
--enumthreshold         0

# Case of 'e' in numbers: "lowercase" or "uppercase" (default)
--exponentcase          uppercase

# Group exponent digits: "enabled" or "disabled" (default)
--exponentgrouping      disabled

# Place ACL "on-extension" (default) or "on-declarations"
--extensionacl          on-extension

# Minimum line count to organize extension body. Defaults to 0
--extensionlength       0

# Mark for standalone extensions. Defaults to "MARK: - %t + %c"
#--extensionmark         Mark for standalone extensions

# Group digits after '.': "enabled" or "disabled" (default)
--fractiongrouping      disabled

# Function @attributes: "preserve", "prev-line", or "same-line"
--funcattributes        preserve

# Semicolon-delimited list of generic types and type parameters
#--generictypes          Semicolon-delimited list of generic types and type parameters

# Mark for extension grouped with extended type. ("MARK: %c")
#--groupedextension      Mark for extension grouped with extended type

# Guard else: "same-line", "next-line" or "auto" (default)
--guardelse             auto

# Header comments: "strip", "ignore", or the text you wish to use
--header                ignore

# Hex grouping, threshold (default: 4,8) or "none", "ignore"
--hexgrouping           4,8

# Casing for hex literals: "uppercase" (default) or "lowercase"
--hexliteralcase        uppercase

# #if indenting: "indent" (default), "no-indent" or "outdent"
--ifdef                 indent

# Import grouping "testable-first/last", "alpha" (default) or "length"
--importgrouping        testable-bottom

# Number of spaces to indent, or "tab" to use tabs
--indent                4

# Indent cases inside a switch: "true" or "false" (default)
--indentcase            false

# Indent multiline strings: "false" (default) or "true"
--indentstrings         false

# Names of additional Lifecycle methods (e.g. viewDidLoad)
#--lifecycle             Names of additional Lifecycle methods

# Insert blank line after "MARK:": "true" (default) or "false"
--lineaftermarks        true

# Linebreak character to use: "cr", "crlf" or "lf" (default)
--linebreaks            lf

# Insert MARK comments between categories (true by default)
--markcategories        true

# Mark extensions "always" (default), "never", or "if-not-empty"
--markextensions        always

# Mark types "always" (default), "never", or "if-not-empty"
--marktypes             always

# Maximum length of a line before wrapping. defaults to "none"
--maxwidth              none

# Comma-delimited list of modifiers in preferred order
#--modifierorder         Comma-delimited list of modifiers in preferred order

# List of functions that should never use trailing closures
#--nevertrailing         List of functions that should never use trailing closures

# Comma-delimited list of operators without surrounding space
#--nospaceoperators      Comma-delimited list of operators without surrounding space

# Comma-delimited list of operators that shouldn't be wrapped
#--nowrapoperators       Comma-delimited list of operators that shouldn't be wrapped

# Octal grouping, threshold (default: 4,8) or "none", "ignore"
--octalgrouping         4,8

# Spacing for operator funcs: "spaced" (default) or "no-space"
--operatorfunc          spaced

# Declarations to organize (default: class, actor, struct, enum)
--organizetypes         class,actor,struct,enum

# let/var placement in patterns: "hoist" (default) or "inline"
--patternlet            hoist

# Spacing for ranges: "spaced" (default) or "no-space"
--ranges                spaced

# Redundant type handling: "inferred", "explicit", or "infer-locals-only" (default)
--redundanttype         infer-locals-only

# Explicit self: "insert", "remove" (default) or "init-only"
--self                  remove

# Comma-delimited list of functions with @autoclosure arguments
#--selfrequired          Comma-delimited list of functions with @autoclosure arguments

# Allow semicolons: "never" or "inline" (default)
--semicolons            inline

# Use ? for optionals "always" (default) or "except-properties"
--shortoptionals        always

# Align code independently of tab width. defaults to "enabled"
--smarttabs             enabled

# Use some Any types: "true" (default) or "false"
--someany               true

# Stripping of unused arguments: "closure-only", "unnamed-only" or "always" (default)
--stripunusedargs       always

# Minimum line count to organize struct body. Defaults to 0
--structthreshold       0

# The width of a tab character. Defaults to "unspecified"
--tabwidth              unspecified

# Comma-delimited list of functions with throwing @autoclosure arguments
#--throwcapturing        List of functions with throwing @autoclosure arguments

# Comma-delimited list of functions that use trailing closures
#--trailingclosures      Comma-delimited list of functions that use trailing closures

# Trim trailing space: "always" (default) or "nonblank-lines"
--trimwhitespace        always

# Type @attributes: "preserve", "prev-line", or "same-line"
--typeattributes        preserve

# Blank lines from types: "remove" (default) or "preserve" blank lines from types
--typeblanklines        remove

# Template for type mark comments. Defaults to "MARK: - %t"
#--typemark              Template for type mark comments

# Property @attributes: "preserve", "prev-line", or "same-line"
--varattributes         preserve

# How void types are represented: "void" (default) or "tuple"
--voidtype              void

# Wrap all arguments: "before-first", "after-first", "preserve"
--wraparguments         preserve

# Wrap array/dict: "before-first", "after-first", "preserve"
--wrapcollections       preserve

# Wrap conditions: "before-first", "after-first", "preserve"
--wrapconditions        after-first

#  Wrap effects: "if-multiline", "never", "preserve"
--wrapeffects           preserve

# Wrap enum cases: "always" (default) or "with-values"
--wrapenumcases         always

# Wrap func params: "before-first", "after-first", "preserve"
--wrapparameters        preserve

# Wrap return type: "if-multiline", "preserve" (default)
--wrapreturntype        preserve

# Wrap ternary operators: "default", "before-operators"
--wrapternary           default

# Wrap typealiases: "before-first", "after-first", "preserve"
--wraptypealiases       preserve

# Match Xcode indenting: "enabled" or "disabled" (default)
--xcodeindentation      disabled

# Swap yoda values: "always" (default) or "literals-only"
--yodaswap              always
