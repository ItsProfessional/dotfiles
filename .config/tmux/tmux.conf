# Set prefix
unbind C-b
set-option -g prefix C-Space
bind-key C-Space send-prefix

# Automatically set window title
set -wg automatic-rename on
set -g  set-titles       on
set -g  set-titles-string       '#{window_name}'
set -g  automatic-rename-format '#{pane_current_command}'

# Make status bar use terminal theme
set -g  status-style bg=default

# Disable escape time
set -sg escape-time 0

# Base index at 1
set -g  base-index 1
set -g  pane-base-index 1
set -wg pane-base-index 1
set -g  renumber-windows on

# History limit
set -g  history-limit 50000
set -wg monitor-activity on

# Increase tmux messages display duration from 750ms to 4s
# set -g display-time 4000

# Refresh 'status-left' and 'status-right' every second
set -g status-interval 1

# Super useful when using "grouped sessions" and multi-monitor setup
set -wg aggressive-resize on

# Enable mouse
set -g mouse on

# Enable clipboard
set -g set-clipboard on

# Switch to another session when exiting a session
set -g detach-on-destroy off

# Update environment
set -g update-environment "DBUS_SESSION_BUS_ADDRESS DISPLAY SSH_AUTH_SOCK XAUTHORITY"

# Focus events enabled for terminals that support them
set -g focus-events on

# Fix colors
set -g default-terminal "screen-256color"
set -as terminal-features ",xterm-256color:RGB"

# Active/inactive panes color
# set -g window-style 'fg=white,bg=#313244'
# set -g window-active-style 'fg=white,bg=#1E1E2E'

# Vim parity
set -wg mode-keys   vi
set -g  status-keys vi

# Pane selection
bind h select-pane -L
bind j select-pane -D 
bind k select-pane -U
bind l select-pane -R

# Improve copy mode
bind -T copy-mode-vi v   send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi y   send -X copy-selection-and-cancel

# Screen-like mode
bind C-n next-window
bind C-p previous-window
bind C-c new-window
bind C-k kill-window
bind C-d detach

# Disable confirmation when killing windows and panes
bind & kill-window
bind x kill-pane

# Open panes in same path
bind '%' split-window -h -c '#{pane_current_path}'
bind '"' split-window -v -c '#{pane_current_path}'
bind v split-window -h -c '#{pane_current_path}'
bind s split-window -v -c '#{pane_current_path}'

# Pane focus
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Move pane
bind -n M-H swap-pane -U
bind -n M-L swap-pane -D

# Resize pane
bind -n M-K resize-pane -U
bind -n M-J resize-pane -D
bind -n M-H resize-pane -L
bind -n M-L resize-pane -R

# Window selection
bind -n C-0 select-window -t :1
bind -n C-1 select-window -t :1
bind -n C-2 select-window -t :2
bind -n C-3 select-window -t :3
bind -n C-4 select-window -t :4
bind -n C-5 select-window -t :5
bind -n C-6 select-window -t :6
bind -n C-7 select-window -t :7
bind -n C-8 select-window -t :8
bind -n C-9 select-window -t :9

# Switch to windows with id above 9
bind          -       switch-client -Tabove9
bind -n       M--     switch-client -Tabove9
bind -Tabove9 0       select-window -t:10
bind -Tabove9 1       select-window -t:11
bind -Tabove9 2       select-window -t:12
bind -Tabove9 3       select-window -t:13
bind -Tabove9 4       select-window -t:14
bind -Tabove9 5       select-window -t:15
bind -Tabove9 6       select-window -t:16
bind -Tabove9 7       select-window -t:17
bind -Tabove9 8       select-window -t:18
bind -Tabove9 9       select-window -t:19

# Switch to next/previous/last window without prefix key

# General
bind -n M-7 copy-mode
bind -n "M-;" command-prompt
bind -n "M-\\" 'source-file $XDG_CONFIG_HOME/tmux/tmux.conf; display-message -d 150 "Sourced"'
bind R 'source-file $XDG_CONFIG_HOME/tmux/tmux.conf; display-message -d 150 "Sourced"'

# Sessions
bind -n M-O new-session
bind -n M-9 command-prompt "rename-session '%%'"
bind -n M-P switch-client -p
bind -n M-N switch-client -n
bind -n M-C-m switch-client -l
bind -n M-> detach-client

# Windows
bind -n M-o new-window
bind -n M-'"' kill-window
bind -n M-, choose-window
bind -n M-n next-window
bind -n M-p previous-window
bind -n M-M last-window
bind -n -r M-C-h select-window -t :-
bind -n -r M-C-l select-window -t :+

# Panes
bind -n M-u split-window -v -c '#{pane_current_path}'
bind -n M-i split-window -h -c '#{pane_current_path}'
bind -n M-"'" kill-pane
bind -n M-= display-panes
bind -n C-f resize-pane -Z # fullscreen
bind -n M-m last-pane
bind -n M-/ break-pane
bind -n M-[ select-layout even-vertical
bind -n "M-]" select-layout even-horizontal
bind -n "M-{" choose-window 'join-pane -v -s "%%"'
bind -n "M-}" choose-window 'join-pane -h -s "%%"'

# Plugins binds
# The appropriate way to bind them is to configure an option, but most plugins force the prefix key on the user (i.e. dont use -n on bind), and I don't like that so... have to hardcode it.

# TPM
bind -n M-I run-shell "$XDG_CONFIG_HOME/tmux/tmux/plugins/tpm/bindings/install_plugins"
bind -n M-U run-shell "$XDG_CONFIG_HOME/tmux/tmux/plugins/tpm/bindings/update_plugins"
bind -n M-C run-shell "$XDG_CONFIG_HOME/tmux/tmux/plugins/tpm/bindings/clean_plugins"

# Resurrect
bind -n "M-." run-shell "$XDG_CONFIG_HOME/tmux/plugins/tmux-resurrect/scripts/restore.sh"
bind -n "M->" run-shell "$XDG_CONFIG_HOME/tmux/plugins/tmux-resurrect/scripts/save.sh"

# Cowboy
bind -n "M-*" run-shell "$XDG_CONFIG_HOME/tmux/plugins/tmux-cowboy/scripts/kill.sh KILL"

# Tmux FPP
#bind -n M-f run-shell "$(printf '%q start %q' "$XDG_CONFIG_HOME/tmux/plugins/tmux-fpp/fpp.tmux" "edit")"

# FZF
bind -n C-v run-shell -b "$XDG_CONFIG_HOME/tmux/plugins/tmux-fzf/main.sh"

# Power zoom
bind -n C-z run-shell "$XDG_CONFIG_HOME/tmux/plugins/tmux-power-zoom/scripts/power_zoom.sh"






# Plugins
set -g @plugin 'tmux-plugins/tpm' # Plugin manager
set -g @plugin 'lljbash/tmux-update-display' # When attaching to tmux session, update $DISPLAY for each tmux pane in that session.
# set -g @plugin 'catppuccin/tmux' # Theme
set -g @plugin "janoamaral/tokyo-night-tmux" # Theme
#set -g @plugin 'erikw/tmux-powerline' # Status bar

#set -g @plugin 'jabirali/tmux-tilish'
#set -g @plugin 'christoomey/vim-tmux-navigator'
#set -g @plugin 'sunaku/tmux-navigate'

#set -g @plugin 'tmux-plugins/tmux-sidebar'
#set -g @plugin 'kiyoon/treemux'

set -g @plugin 'tmux-plugins/tmux-yank' # Use system clipboard
set -g @plugin 'noscript/tmux-mighty-scroll' # Fixes scrolling on tmux. Allows programs like `man` to scroll normally.
#set -g @plugin 'ofirgall/tmux-window-name'

set -g @plugin 'tmux-plugins/tmux-resurrect' # Save/restore environment
set -g @plugin 'tmux-plugins/tmux-continuum' # Save periodically and restore on launch
set -g @plugin 'b0o/tmux-autoreload' # Autoreload config on change
set -g @plugin 'tmux-plugins/tmux-pain-control' # Standard pane bindings

set -g @plugin 'rickstaa/tmux-notify' # Notify when a process finishes running (prefix + m to monitor)

set -g @plugin 'jaclu/tmux-power-zoom' # Moves active pane to another window, and allows to toggle it: C-z
set -g @plugin 'jaclu/tmux-mouse-swipe' # Allows swiping right-click right/left to switch window, and up/down to switch sessions
set -g @plugin 'tmux-plugins/tmux-cowboy' # Force kill running process: Alt-*
set -g @plugin 'trevarj/tmux-open-nvim' # Open files in a nvim pane on the session (with `ton` script)
set -g @plugin 'sainnhe/tmux-fzf' # Uses fzf for a quick-actions menu: C-v
set -g @plugin 'laktak/extrakto' # Menu to copy *anything* on the pane (uses fzf): prefix + tab
set -g @plugin 'tmux-plugins/tmux-open' # Adds binds for opening highlighted file/url in copy mode:
    # highlight text in copy mode, and:
    # o: call xdg-open on selection
    # C-o: open in editor
    # S (shift+s): search google (doesn't work for some reason)

set -g @plugin 'Morantron/tmux-fingers' # Copy common regions of text like file paths, IPs, etc.
    # Note: sometimes it doesn't highlight everything, in those cases, use extrakto (prefix + tab) and tmux-fpp (prefix + f) respectively instead

set -g @plugin 'CrispyConductor/tmux-copy-toolkit' # Binds for copying parts of output on the pane:
    # easymotion: s+<first_char>+<shown_label> to move cursor
    # easycopy:   prefix + shift + s: <start>+<label>+<end>+<label> to copy a region
    # linecopy:   prefix + shift + w: <label> to copy lines
    # use tmux-fingers instead of quickcopy and quickopen


# Plugin options
# Tilish
set -g @tilish-default 'main-vertical'
set -g @tilish-navigate 'on'

# Resurrect and continuum
set -g @resurrect-capture-pane-contents 'on'
#set -g @continuum-restore 'on'

# Notify
set -g @tnotify-verbose 'on'
set -g @tnotify-sleep-duration '4'

# Fpp
#set -g @fpp-key 'x'

# Fingers
set -g @fingers-key F
# Overrides matching file paths with :[line]:[col] at the end
set -g @fingers-pattern-0 "((^|^\.|[[:space:]]|[[:space:]]\.|[[:space:]]\.\.|^\.\.)[[:alnum:]~_-]*/[][[:alnum:]_.#$%&+=/@-]+)(:[[:digit:]]*:[[:digit:]]*)?"
# Launches helper script on Ctrl+[key] in fingers mode
set -g @fingers-ctrl-action "xargs -I {} tmux run-shell 'cd #{pane_current_path}; $XDG_CONFIG_HOME/tmux/plugins/tmux-open-nvim/scripts/ton {} > $XDG_CONFIG_HOME/tmux/plugins/tmux-open-nvim/ton.log'"s

# Copy toolkit
set -g @copytk-copy-command 'tmux load-buffer -w -'

# Mightly scroll
set -g @mighty-scroll-by-page 'irssi'
set -g @mighty-scroll-fallback-mode 'history'

# Sidebar
#set -g @treemux-tree-nvim-init-file '~/.tmux/plugins/treemux/configs/treemux_init.lua'
#set -g @treemux-tree 'e'
#set -g @sidebar-tree 'e'
#set -g @sidebar-tree-command 'tree -C'

# Theme
set -g @catppuccin_flavour 'mocha'
set -g @tokyo-night-tmux_show_datetime 0
set -g @tokyo-night-tmux_show_path 1
set -g @tokyo-night-tmux_path_format relative
set -g @tokyo-night-tmux_window_id_style dsquare
set -g @tokyo-night-tmux_window_id_style dsquare
set -g @tokyo-night-tmux_show_git 0

#bind -n WheelUpPane if "bash -c '[[ #{pane_current_command} =~ nvim ]]'" "select-pane -t = ; send-keys -M" "select-pane -t = ; send-keys Up ; send-keys Up ; send-keys Up"
#bind -n WheelDownPane if "bash -c '[[ #{pane_current_command} =~ nvim ]]'" "select-pane -t = ; send-keys -M" "select-pane -t = ; send-keys Down ; send-keys Down ; send-keys Down"

run '$XDG_CONFIG_HOME/tmux/plugins/tpm/tpm'
