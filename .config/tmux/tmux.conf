# set prefixes
set -g prefix C-a
set -g prefix2 C-Space

# send prefix by keying the prefix twice
unbind C-b
bind C-a send-prefix
bind C-Space send-prefix -2

# autoset window title
set -wg automatic-rename on
set -g automatic-rename-format '#{pane_current_command}'

# autoset terminal title
set -g set-titles on
set -g set-titles-string '#{window_name}'

# no escape time delay
set -sg escape-time 0

# start indexing windows at 1 instead of 0
set -g base-index 1
set -g pane-base-index 1
set -wg pane-base-index 1
set -g renumber-windows on

# increase history limit
set -g history-limit 50000

# increase tmux messages display duration
set -g display-time 2000

# refresh status every second
set -g status-interval 1

# do not constrain windows to the size of the smallest client connected to it
set -wg aggressive-resize on

# enable mouse
set -g mouse on

# use system clipboard
set -g set-clipboard on

# don't exit from tmux when closing a session
set -g detach-on-destroy off

# enable focus events
set -g focus-events on

# true color
set -ag terminal-features  ",*:Tc"
set -ag terminal-overrides ",*:Tc"

# environment
set -g update-environment "DBUS_SESSION_BUS_ADDRESS DISPLAY WAYLAND_DISPLAY SSH_AUTH_SOCK XAUTHORITY EDITOR"

# let panes remain in place when their command exits: https://www.reddit.com/r/tmux/comments/hm84dn/is_there_a_way_to_intercept_destruction_of_the/
#set -g remain-on-exit on
#set-hook -g pane-died "if -F '#{&&:#{==:#{session_windows},1},#{==:#{window_panes},1}}' 'respawn-pane' 'kill-pane'"

# status bar
set -g status-right-length 100
set -g status-left-length 100
set -g status-left ""
set -g status-right ""
#set -ag status-right "#{prefix_highlight}"
#set -ag status-right "#{tmux_mode_indicator}"
set -ag status-right "#{?@keylocker-status,#[fg=color255]#[bg=color208] î©µ , }"
set -ag status-right "#{E:@catppuccin_status_application}"
set -ag status-right "#{E:@catppuccin_status_session}"
set -ag status-right "#{E:@catppuccin_status_uptime}"

# vi mode
set -wg mode-keys vi
set -g status-keys vi


# plugins











# modifications to default binds
source $XDG_CONFIG_HOME/tmux/default-binds.conf

# copy mode vi binds
bind -T copy-mode-vi v   send -X begin-selection
bind -T copy-mode-vi C-v send -X begin-selection \; send -X rectangle-toggle
bind -T copy-mode-vi V   send -X select-line
bind -T copy-mode-vi y   send -X copy-selection-and-cancel
bind -T copy-mode-vi Y   send -X begin-selection \; send -X end-of-line \; send -X copy-selection-and-cancel

# parity with screen bindings
bind C-a last-window
bind C-n next-window
bind C-p previous-window
bind C-c new-window
bind C-k kill-window
bind C-d detach

# focus pane
# https://unix.stackexchange.com/questions/215688/tmux-select-pane-ldur-command-disable-auto-cycling-behavior
bind -r h      if -F '#{pane_at_left}'   '' 'select-pane -L'
bind -r j      if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind -r k      if -F '#{pane_at_top}'    '' 'select-pane -U'
bind -r l      if -F '#{pane_at_right}'  '' 'select-pane -R'
bind -n -r M-h if -F '#{pane_at_left}'   '' 'select-pane -L'
bind -n -r M-j if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind -n -r M-k if -F '#{pane_at_top}'    '' 'select-pane -U'
bind -n -r M-l if -F '#{pane_at_right}'  '' 'select-pane -R'

# move pane
bind -n M-H if -F '#{pane_at_left}'  '' 'swap-pane -U'
bind -n M-L if -F '#{pane_at_right}' '' 'swap-pane -D'

# resize pane
bind -r -n C-H resize-pane -L
bind -r -n C-J resize-pane -D
bind -r -n C-K resize-pane -U
bind -r -n C-L resize-pane -R

# focus window
bind -n C-0 select-window -t :1
bind -n C-1 select-window -t :1
bind -n C-2 select-window -t :2
bind -n C-3 select-window -t :3
bind -n C-4 select-window -t :4
bind -n C-5 select-window -t :5
bind -n C-6 select-window -t :6
bind -n C-7 select-window -t :7
bind -n C-8 select-window -t :8
bind -n C-9 select-window -t :9
# switch to windows with id above 9
bind          -   switch-client -Tabove9
bind -n       M-- switch-client -Tabove9
bind -Tabove9 0   select-window -t:10
bind -Tabove9 1   select-window -t:11
bind -Tabove9 2   select-window -t:12
bind -Tabove9 3   select-window -t:13
bind -Tabove9 4   select-window -t:14
bind -Tabove9 5   select-window -t:15
bind -Tabove9 6   select-window -t:16
bind -Tabove9 7   select-window -t:17
bind -Tabove9 8   select-window -t:18
bind -Tabove9 9   select-window -t:19

# General
bind -n M-7 copy-mode
bind -n "M-;" command-prompt
bind -n "M-\\" 'source $XDG_CONFIG_HOME/tmux/tmux.conf; display "Reloaded tmux.conf"'
bind R 'source $XDG_CONFIG_HOME/tmux/tmux.conf; display "Reloaded tmux.conf"'
bind -n 'F3' 'source $XDG_CONFIG_HOME/tmux/tmux.conf; display "Reloaded tmux.conf"'

# Sessions
# https://unix.stackexchange.com/questions/313577/how-to-make-tmux-sessions-count-from-1-instead-of-0
bind w choose-tree -ZwK '#{?#{e|<:#{line},9},#{e|+:1,#{line}},#{?#{e|<:#{line},35},M-#{a:#{e|+:97,#{e|-:#{line},9}}},}}'

bind -n M-O new-session
bind -n M-9 command-prompt "rename-session '%%'"
bind -n M-P switch-client -p
bind -n M-N switch-client -n
bind -n M-C-m switch-client -l
bind -n M-> detach-client
bind -n M-, choose-tree -ZwK '#{?#{e|<:#{line},9},#{e|+:1,#{line}},#{?#{e|<:#{line},35},M-#{a:#{e|+:97,#{e|-:#{line},9}}},}}'

# Windows
bind -n M-o new-window
bind -n M-enter new-window
bind -n M-'"' kill-window
bind -n M-n next-window
bind -n M-p previous-window
bind -n M-M last-window
bind -n -r M-C-h select-window -t :-
bind -n -r M-C-l select-window -t :+

# Panes
bind -n M-u split-window -v -c '#{pane_current_path}'
bind -n M-i split-window -h -c '#{pane_current_path}'
bind -n M-"'" kill-pane
bind -n M-C-"'" respawn-pane -k
bind -n M-= display-panes
bind -n C-f resize-pane -Z # fullscreen
bind -n M-m last-pane
bind -n M-/ break-pane
bind -n M-? join-pane -h -s !
bind -n M-[ select-layout even-vertical
bind -n "M-]" select-layout even-horizontal
bind -n "M-{" choose-tree 'join-pane -v -s "%%"'
bind -n "M-}" choose-tree 'join-pane -h -s "%%"'

# Plugins binds
# The appropriate way to bind them is to configure an option, but most plugins force the prefix key on the user (i.e. dont use -n on bind), and I don't like that so... have to hardcode it.

# tpm
bind -n M-I run-shell "$XDG_CONFIG_HOME/tmux/tmux/plugins/tpm/bindings/install_plugins"
bind -n M-U run-shell "$XDG_CONFIG_HOME/tmux/tmux/plugins/tpm/bindings/update_plugins"
bind -n M-C run-shell "$XDG_CONFIG_HOME/tmux/tmux/plugins/tpm/bindings/clean_plugins"

# tmux-resurrect
bind -n "M-." run-shell "$XDG_CONFIG_HOME/tmux/plugins/tmux-resurrect/scripts/restore.sh"
bind -n "M->" run-shell "$XDG_CONFIG_HOME/tmux/plugins/tmux-resurrect/scripts/save.sh"

# tmux-cowboy
bind -n "M-*" run-shell "$XDG_CONFIG_HOME/tmux/plugins/tmux-cowboy/scripts/kill.sh KILL"

# tmux-fpp
# Bind 'f' to run FPP launching an editor
bind -n M-f run-shell "$XDG_CONFIG_HOME/tmux/plugins/tmux-fpp/fpp.tmux start edit"
# Bind 'x' to run FPP and paste the list of files in the initial pane
bind -n M-x run-shell "$XDG_CONFIG_HOME/tmux/plugins/tmux-fpp/fpp.tmux start paste"

# tmux-fzf
bind -n C-v run-shell -b "$XDG_CONFIG_HOME/tmux/plugins/tmux-fzf/main.sh"

# tmux-power-zoom
bind -n C-z run-shell "$XDG_CONFIG_HOME/tmux/plugins/tmux-power-zoom/scripts/power_zoom.sh"






# Plugins
set -g @plugin 'tmux-plugins/tpm' # Plugin manager

# Theme/status bar
set -g @plugin 'catppuccin/tmux'
#set -g @plugin "janoamaral/tokyo-night-tmux"
#set -g @plugin 'erikw/tmux-powerline'
#set -g @plugin 'imomaliev/tmux-peacock'

#set -g @plugin 'tmux-plugins/tmux-prefix-highlight' # made redundant by catppuccin
set -g @plugin 'MunifTanjim/tmux-mode-indicator'

# Sidebar
#set -g @plugin 'tmux-plugins/tmux-sidebar'
#set -g @plugin 'kiyoon/treemux'

# manually implemented
#set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-sessionist'
#set -g @plugin 'jabirali/tmux-tilish'
#set -g @plugin '2kabhishek/tmux-tilit'
#set -g @plugin 'christoomey/vim-tmux-navigator'
#set -g @plugin 'sunaku/tmux-navigate' # alternative to vim-tmux-navigator

set -g @plugin 'tmux-plugins/tmux-yank' # Use system clipboard
set -g @plugin 'noscript/tmux-mighty-scroll' # Fixes scrolling on tmux. Allows programs like nvim to scroll normally.
#set -g @plugin 'ofirgall/tmux-window-name' # Names windows
#set -g @plugin 'joshmedeski/tmux-nerd-font-window-name' # Names windows with nerd font icons
set -g @plugin 'graemedavidson/tmux-pane-focus' # Auto resize windows on focus
set -g @plugin 'tmux-plugins/tmux-resurrect' # Save/restore environment
set -g @plugin 'tmux-plugins/tmux-continuum' # Save periodically and restore on launch
set -g @plugin 'b0o/tmux-autoreload' # Autoreload config on change
set -g @plugin 'MunifTanjim/tmux-suspend' # allows suspending local tmux session, useful for running tmux within ssh
#set -g @plugin 'niqodea/tmux-matryoshka' # alternative to tmux-suspend
set -g @plugin 'lljbash/tmux-update-display' # When attaching to tmux session, update $DISPLAY for each tmux pane in that session.

set -g @plugin 'rickstaa/tmux-notify' # Notify when a process finishes running (prefix + m to monitor)

set -g @plugin 'thesast/tmux-keylocker' # Disables tmux bindings so they can be used in programs: Ctrl-g
set -g @plugin 'jaclu/tmux-power-zoom' # Moves active pane to another window, and allows to toggle it: C-z
set -g @plugin 'jaclu/tmux-mouse-swipe' # Allows swiping right-click right/left to switch window, and up/down to switch sessions
set -g @plugin 'tmux-plugins/tmux-cowboy' # Force kill running process: Alt+* (alt+shift+8)
set -g @plugin 'whame/tmux-modal' # Modal mode for commands: Alt-b
set -g @plugin 'lost-melody/tmux-command-palette' # Help menu: prefix + ? (shift + /)
set -g @plugin 'sainnhe/tmux-fzf' # Menu: C-v
set -g @plugin 'jaclu/tmux-menus' # Menu: prefix + backslash
set -g @plugin 'alexwforsythe/tmux-which-key' # Menu: prefix + space

# Copy
set -g @plugin 'tmux-plugins/tmux-copycat' # Useful for its predefined searches feature: prefix + /
set -g @plugin 'laktak/extrakto' # Menu to copy anything on the pane (uses fzf): prefix + tab

set -g @plugin 'CrispyConductor/tmux-copy-toolkit' # Mostly replaced by other plugins
    # easymotion: copy mode + s + <start>+<label> to jump (USE TMUX-EASYMOTION INSTEAD)
    # easycopy:   prefix + shift + s: <start>+<label>+<end>+<label> to copy a region
    # linecopy:   prefix + shift + w: <start_label><end_label> to copy multiple lines
    # quickcopy:  prefix + shift + q to copy common elements (USE TMUX-FINGERS INSTEAD)
    # quickopen:  prefix + shift + p (USE TMUX-FINGERS INSTEAD)

set -g @plugin 'Morantron/tmux-fingers' # Copy common stuff file paths, IPs, etc: prefix+shift+f
#set -g @plugin 'fcsonline/tmux-thumbs' # alternative to tmux-fingers
#set -g @plugin 'abhinav/tmux-fastcopy' # alternative to tmux-fingers

set -g @plugin 'ddzero2c/tmux-easymotion' # better than tmux-copytk's implementation as it can jump panes: prefix + s
# set -g @plugin 'schasse/tmux-jump' # alternative to tmux-easymotion (can't jump panes)
set -g @plugin 'IngoMeyer441/tmux-easy-motion' # implements more features other than seeking: prefix + ctrl + s

set -g @plugin 'roosta/tmux-fuzzback' # search buffer using fzf and jump to selected position: prefix + pipe (shift + backslash)


# Open
set -g @plugin 'wfxr/tmux-fzf-url' # made redundant by extrakto and others: prefix + u
#set -g @plugin 'tmux-plugins/tmux-urlview' # alternative to tmux-fzf-url
set -g @plugin 'tmux-plugins/tmux-fpp' # uses facebook pathpicker: prefix + f
set -g @plugin 'trevarj/tmux-open-nvim' # opens files in editor pane, uses "ton" script to integrate to tmux-fingers, etc.
#set -g @plugin 'artemave/tmux_super_fingers' # standalone alternative to tmux-fingers + tmux-open-nvim combo: prefix + f

set -g @plugin 'tmux-plugins/tmux-open' # Adds binds for opening highlighted file/url in copy mode:
    # highlight text in copy mode, and:
    # o: call xdg-open on selection
    # C-o: open in editor
    # S (shift+s): search google







# Plugin options
# tmux-tilish
set -g @tilish-default 'main-vertical'
set -g @tilish-navigate 'on'

# tmux-resurrect
set -g @resurrect-capture-pane-contents 'on'

# tmux-continuum
#set -g @continuum-restore 'on'

# tmux-notify
set -g @tnotify-verbose 'on'
set -g @tnotify-sleep-duration '4'

# tmux-keylocker
set -g @keylocker-toggle-bind 'None'
set -g @keylocker-lock-bind 'F1'
set -g @keylocker-unlock-bind 'F2'

# tmux-fuzzback
set -g @fuzzback-bind |

# tmux-fpp
set -g @fpp-key 'f'

# tmux-fingers
set -g @fingers-key F
# https://github.com/trevarj/tmux-open-nvim#tmux-fingers-or-tmux-open
# Overrides matching file paths with :[line]:[col] at the end
set -g @fingers-pattern-0 "((^|^\.|[[:space:]]|[[:space:]]\.|[[:space:]]\.\.|^\.\.)[[:alnum:]~_-]*/[][[:alnum:]_.#$%&+=/@-]+)(:[[:digit:]]*:[[:digit:]]*)?"
# Launches helper script on Ctrl+[key] in fingers mode
set -g @fingers-ctrl-action "xargs -I {} tmux run-shell 'cd #{pane_current_path}; $XDG_CONFIG_HOME/tmux/plugins/tmux-open-nvim/scripts/ton {} > $XDG_CONFIG_HOME/tmux/plugins/tmux-open-nvim/ton.log'"s

# tmux-thumbs
set -g @thumbs-key F
set -g @thumbs-command ". $XDG_CONFIG_HOME/tmux/plugins/tmux-yank/scripts/helpers.sh && clipboard_copy_command && echo -n {} | $(clipboard_copy_command)"

# tmux-fastcopy
set -g @fastcopy-key F

# tmux-copy-toolkit
set -g @copytk-copy-command 'tmux load-buffer -w -'

# tmux-easy-motion
set -g @easy-motion-prefix "C-s"

# tmux-jump
set -g @jump-key 's'

# tmux-modal
set -g @modal-commands-conf $XDG_CONFIG_HOME/tmux/tmux-modal-keybindings.conf

# tmux-mightly-scroll
set -g @mighty-scroll-by-page 'irssi vi'
set -g @mighty-scroll-pass-through 'vim nvim btop'
set -g @mighty-scroll-fallback-mode 'pass-through'

# tmux-pane-focus
set -g @pane-focus-size on
set -g @pane-focus-size '50'
set -g @pane-focus-direction '+'

# tmux-sidebar/treemux
#set -g @treemux-tree-nvim-init-file '$XDG_CONFIG_HOME/tmux/plugins/treemux/configs/treemux_init.lua'
#set -g @treemux-tree 'e'
#set -g @sidebar-tree 'e'
#set -g @sidebar-tree-command 'tree -C'

# catppuccin
set -g @catppuccin_flavor "mocha"
set -g @catppuccin_window_status_style "rounded"

# tokyo night
set -g @tokyo-night-tmux_show_datetime 0
set -g @tokyo-night-tmux_show_path 1
set -g @tokyo-night-tmux_path_format relative
set -g @tokyo-night-tmux_window_id_style dsquare
set -g @tokyo-night-tmux_window_id_style dsquare
set -g @tokyo-night-tmux_show_git 0

# initialize plugin manager (keep this at the bottom of the tmux.conf)
run "$XDG_CONFIG_HOME/tmux/plugins/tpm/tpm"
